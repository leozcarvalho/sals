import{r as d,A as g,k as m,bb as h,o as k,b as a,e as t,D as w,E as S,d as v,F as p,f as b,t as x,H as B,m as N,h as A,i as C}from"./index.d6aa5bd9.js";const D=["disabled"],P=v("option",{value:""},"Selecione um pino",-1),E=["label"],F=["value","disabled"],L={key:0,class:"text-muted"},G={__name:"PinSelect",props:{modelValue:{type:[String,Number,null],default:null},disabled:{type:Boolean,default:!1}},emits:["update:modelValue"],setup(i,{emit:_}){const u=i,r=d([]),o=d(!1),f=new g("/device-pins/grouped/options"),l=d(u.modelValue);m(()=>u.modelValue,e=>{l.value=e},{immediate:!0}),m(l,e=>{_("update:modelValue",e===""||e==="null"?null:Number(e))});const y=async()=>{o.value=!0;try{const e=await f.getList();r.value=e.data||[],await C(),l.value=u.modelValue}finally{o.value=!1}},V=h();return k(y),(e,c)=>(a(),t("div",null,[w(v("select",B({class:"form-select",disabled:i.disabled||o.value,"onUpdate:modelValue":c[0]||(c[0]=s=>l.value=s)},N(V)),[P,(a(!0),t(p,null,b(r.value,s=>(a(),t("optgroup",{key:s.board,label:s.board},[(a(!0),t(p,null,b(s.pins,n=>(a(),t("option",{key:n.id,value:n.id,disabled:n.in_use},x(n.name),9,F))),128))],8,E))),128))],16,D),[[S,l.value]]),o.value?(a(),t("small",L,"Carregando...")):A("",!0)]))}};export{G as _};
