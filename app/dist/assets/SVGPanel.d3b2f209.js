import{A as S,r as i,o as A,j as V,b as P,e as k,g as I,h as b,i as x}from"./index.d6aa5bd9.js";import{S as C,a as E}from"./SVGView.49747902.js";import{h as G}from"./toast.5e73c884.js";class N extends S{constructor(){super("/device-pins")}async togglePin(r){try{return(await this.api.patch(`${this.path}/${r}/toggle`)).data}catch(n){return n.response}}}const q={key:0},$={__name:"SVGPanel",props:{svgId:{type:Number}},setup(l,{expose:r}){const n=l,u=new C,f=new N,p=i([]),g=async e=>{const t=await u.options(e);p.value=t.data||[]},y=async e=>{const t=await f.togglePin(e);t.success&&(G(t,"Pino alternado com sucesso"),o())},m=()=>{const e=document.querySelector("#uploaded-svg");if(!e)return;e.querySelectorAll("[data-type]").forEach(a=>{if(a.getAttribute("data-type")==="pin"){const c=a.getAttribute("data-value");if(!c)return;const d=p.value.find(_=>_.value.toString()===c.toString());if(!d)return;a.style.fill=d.is_active?"#00ff00":"#ff0000",a.style.cursor="pointer",a.ondblclick=()=>y(c)}})},s=i(null),h=async()=>{const e=await u.get(n.svgId,!0);s.value=e.data||{},s.value&&await g(s.value.id)},o=async()=>{await h(),await x(),m()};let v=null;A(async()=>{await o(),v=setInterval(o,1e3)}),V(()=>{clearInterval(v)}),r({refresh:o});const w=i(null);return(e,t)=>s.value?(P(),k("div",q,[I(E,{ref_key:"svgView",ref:w,svg:s.value.content},null,8,["svg"])])):b("",!0)}};export{$ as _};
